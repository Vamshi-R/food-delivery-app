/**
 * component composition -> component inside component
 * All JS functions and variables will be wrapped inside {} (curly braces)
 * App Planning Goes below
 * Header
 *  - Logo
 *  - Nav Items
 * Body
 *  - search
 *  - Restaurant container
 *     - Restaurant Card
 *        -image
 *        -name of restaurant,  cuisine, star rating,delivery time etc.
 * cards
 * Footer
 *  - Copyright
 *  - Links
 *  - Address
 *  - Contact  
 */

/**
 * props : are nothing but normal arguments to a function
 * passing prop to a component is like passing argument to a function
 * props are javascript object
 * practice props destructuring
 */

 /**
 * config driven UI - example Swiggy app
 * UI is driven by config -> config comes from BE
 * Data is the config
 * Data and UI changes based on location is config driven UI
 */

 /**
 * Inline styles
 * another example style = {{backgrondColor: red}}
 * first curly braces suggests there is some javascript code
 * second curly brace is a javascript object 
 */

 /**
 * Difference of syntax 
 * src = "some string"
 * src = {some string + to be concated value}
 * 
 */

 /**
 * key property
 * always we are looping something in JSX we need to provide unique key property
 * example: 
 *   {
                resObj.map((restaurant) => (
                    <RestaurantCards key={restaurant?.id} resData={restaurant} />      
                ))
            }
 *  why do we need key prop ?
 * to avoid re-rendering of all the data when a new data is added to same data we need to pass key prop
 * if we dont keep the keys then it will clear everything and render again because it doesnt know
   where new data to be added.
 * Dont assign indexes to keys, why not use index as key in react ? browse and learn about it.
 * not using keys is not acceptible <<<<<< index as key (atleast not a best practice) 
                 <<<< unique id (best practice)
 */
 